(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{142:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return u}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=o.a.createContext({}),d=function(e){var n=o.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},b=function(e){var n=d(e.components);return o.a.createElement(p.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},m=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),b=d(t),m=r,u=b["".concat(c,".").concat(m)]||b[m]||s[m]||a;return t?o.a.createElement(u,l(l({ref:n},p),{},{components:t})):o.a.createElement(u,l({ref:n},p))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,c=new Array(a);c[0]=m;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var p=2;p<a;p++)c[p]=t[p];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},89:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return i})),t.d(n,"default",(function(){return d}));var r=t(3),o=t(7),a=(t(0),t(142)),c={title:"Replace command",sidebar_label:"Replace",slug:"replace"},l={unversionedId:"reference/protocol/commands/replace",id:"reference/protocol/commands/replace",isDocsHomePage:!1,title:"Replace command",description:"Replaces one or more controls on a page.",source:"@site/docs/reference/protocol/commands/replace.md",slug:"/reference/protocol/commands/replace",permalink:"/docs/reference/protocol/commands/replace",editUrl:"https://github.com/pglet/website/edit/master/docs/reference/protocol/commands/replace.md",version:"current",sidebar_label:"Replace",sidebar:"someSidebar",previous:{title:"Clean command",permalink:"/docs/reference/protocol/commands/clean"},next:{title:"Remove command",permalink:"/docs/reference/protocol/commands/remove"}},i=[{value:"Description",id:"description",children:[]},{value:"Examples",id:"examples",children:[]},{value:"Parameters",id:"parameters",children:[{value:"<code>control-type</code>",id:"control-type",children:[]},{value:"<code>id</code>",id:"id",children:[]},{value:"<code>to</code>",id:"to",children:[]},{value:"<code>at</code>",id:"at",children:[]}]}],p={toc:i};function d(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Replaces one or more controls on a page."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"replace <control-type> to=<string>\n  [id=<string>]\n  [at=<int>]\n  property1=value\n  property2=value\n  ...\n")),Object(a.b)("h2",{id:"description"},"Description"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"replace")," command replaces one or more controls on a page with a new control or a tree. It subsequently executes ",Object(a.b)("inlineCode",{parentName:"p"},"clean")," and then ",Object(a.b)("inlineCode",{parentName:"p"},"add"),' commands as a single "transaction" which helps avoid flickering when ',Object(a.b)("inlineCode",{parentName:"p"},"clean")," and ",Object(a.b)("inlineCode",{parentName:"p"},"add")," executed separately."),Object(a.b)("h2",{id:"examples"},"Examples"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),'replace text to=header value="Welcome back!"\n')),Object(a.b)("p",null,"This command removes all children of ",Object(a.b)("inlineCode",{parentName:"p"},"header")," control and then adds a new ",Object(a.b)("inlineCode",{parentName:"p"},"text")," control."),Object(a.b)("h2",{id:"parameters"},"Parameters"),Object(a.b)("h3",{id:"control-type"},Object(a.b)("inlineCode",{parentName:"h3"},"control-type")),Object(a.b)("p",null,"The type of the control."),Object(a.b)("h3",{id:"id"},Object(a.b)("inlineCode",{parentName:"h3"},"id")),Object(a.b)("p",null,"Control ID. ID will be auto-generated if not specified. If you need to get generated ID replace ",Object(a.b)("inlineCode",{parentName:"p"},"add")," command with ",Object(a.b)("inlineCode",{parentName:"p"},"addr"),' which means "add with result", for example in Bash:'),Object(a.b)("h3",{id:"to"},Object(a.b)("inlineCode",{parentName:"h3"},"to")),Object(a.b)("p",null,"Parent control ID."),Object(a.b)("h3",{id:"at"},Object(a.b)("inlineCode",{parentName:"h3"},"at")),Object(a.b)("p",null,"Replace control at the specified position in the children collection."))}d.isMDXComponent=!0}}]);