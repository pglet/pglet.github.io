(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{114:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(7),i=(n(0),n(154)),l={title:"Pglet Server installation",sidebar_label:"Installation",slug:"installation"},o={unversionedId:"pglet-server/installation",id:"pglet-server/installation",isDocsHomePage:!1,title:"Pglet Server installation",description:"Pglet Server can be run as a standalone executable or a Docker container.",source:"@site/docs/pglet-server/installation.md",slug:"/pglet-server/installation",permalink:"/docs/pglet-server/installation",editUrl:"https://github.com/pglet/website/edit/master/docs/pglet-server/installation.md",version:"current",sidebar_label:"Installation",sidebar:"someSidebar",previous:{title:"Deep linking",permalink:"/docs/deep-linking"},next:{title:"Pglet Service",permalink:"/docs/pglet-service"}},c=[{value:"Standalone executable",id:"standalone-executable",children:[{value:"Configuration",id:"configuration",children:[]},{value:"<code>config.yml</code> file",id:"configyml-file",children:[]},{value:"Environment variables",id:"environment-variables",children:[]}]},{value:"Docker container",id:"docker-container",children:[]}],b={toc:c};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Pglet Server can be run as a standalone executable or a Docker container."),Object(i.b)("h2",{id:"standalone-executable"},"Standalone executable"),Object(i.b)("p",null,"Pglet Server is available for the following platforms:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Linux: x64, ARM and ARM64"),Object(i.b)("li",{parentName:"ul"},"macOS: x64 and ARM64 (Apple Silicon M1)"),Object(i.b)("li",{parentName:"ul"},"Windows: x64")),Object(i.b)("p",null,"The latest Pglet Server executable can be downloaded from ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/pglet/pglet/releases"}),"Pglet releases")," page."),Object(i.b)("p",null,"To start Pglet Server:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"./pglet server\n")),Object(i.b)("h3",{id:"configuration"},"Configuration"),Object(i.b)("p",null,"By default Pglet Server is listening on port 5000, but this and other server settings can be configured via environment variables or in configuration file."),Object(i.b)("h3",{id:"configyml-file"},Object(i.b)("inlineCode",{parentName:"h3"},"config.yml")," file"),Object(i.b)("p",null,"Pglet configuration file must be named ",Object(i.b)("inlineCode",{parentName:"p"},"config.yml")," and be in YAML format."),Object(i.b)("p",null,"Configuration file location on Linux/macOS:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"/etc/pglet/config.yml")," (system-wide)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"$HOME/.config/pglet/config.yml")," (user-specific)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"./config.yml")," (current directory)")),Object(i.b)("p",null,"Configuration file location on Windows:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"%ProgramData%\\pglet\\config.yml")," (system-wide)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"%UserProfile%\\.pglet\\config.yml")," (user-specific)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".\\config.yml")," (current directory)")),Object(i.b)("p",null,"Minimal configuration for self-hosted Pglet Server:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# server listening port, default is 5000\nserver_port: 8080\n\n# allow connections from remote scripts/programs, default is 'false'\nallow_remote_host_clients: true\n\n# all connecting scripts/programs must present this token, default is empty\nhost_clients_auth_token: <token>\n")),Object(i.b)("p",null,"The rest of supported extra settings in the configuration file:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# force redirecting to HTTPS protocol\nforce_ssl: false\n\n# shared page lifetime since the last time it was updated, default is 1440\npage_lifetime_minutes: 1440\n\n# app page lifetime since the last time any app session was updated, default is 60\napp_lifetime_minutes: 60\n\n# ensure unath client has access to the page created from its IP\ncheck_page_ip: false\n\n# reserved account names, e.g. ["pglet", "admin", "administrator", "cp"]\nreserved_account_names: []\n\n# reserved page names e.g. ["public/index"]\nreserved_page_names: []\n\n# limits for unauthenticated clients, 0 - no limits\nlimit_pages_per_hour: 0\nlimit_sessions_per_hour: 0\nlimit_session_size_bytes: 0\n\n# Configure redis to enable persistent pages and sessions\nredis:\n  # Redis IP:port\n  addr:\n  password:\n  max_idle: 5\n  max_active: 10\n')),Object(i.b)("h3",{id:"environment-variables"},"Environment variables"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"PGLET_SERVER_PORT"),": 5000"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"PGLET_FORCE_SSL"),": false"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"PGLET_ALLOW_REMOTE_HOST_CLIENTS"),": false"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"PGLET_PAGE_LIFETIME_MINUTES"),": 1440"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"PGLET_APP_LIFETIME_MINUTES"),": 60"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"PGLET_CHECK_PAGE_IP"),": true"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"PGLET_RESERVED_ACCOUNT_NAMES"),": account1 account2 ..."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"PGLET_RESERVED_PAGE_NAMES"),": account/page account/page"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"PGLET_LIMIT_PAGES_PER_HOUR"),": 0"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"PGLET_LIMIT_SESSIONS_PER_HOUR"),": 0"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"PGLET_LIMIT_SESSION_SIZE_BYTES"),": 0"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"PGLET_REDIS_ADDR"),":"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"PGLET_REDIS_PASSWORD"),":"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"PGLET_REDIS_MAX_IDLE"),": 5"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"PGLET_REDIS_MAX_ACTIVE"),": 10")),Object(i.b)("h2",{id:"docker-container"},"Docker container"),Object(i.b)("p",null,"Pglet Server can be run as a Docker container by using ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://hub.docker.com/r/pglet/server"}),Object(i.b)("inlineCode",{parentName:"a"},"pglet/server"))," image."),Object(i.b)("p",null,"By default, Pglet container is listening on port 8080 and allows remote host clients. The easiest way to control Pglet settings is via environment variables."),Object(i.b)("p",null,"For example, to run Pglet Server on port 80 and map it to the host:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker run --env PGLET_SERVER_PORT=80 -p 80:80 pglet/server \n")))}s.isMDXComponent=!0},154:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),s=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),p=s(n),m=a,d=p["".concat(l,".").concat(m)]||p[m]||u[m]||i;return n?r.a.createElement(d,o(o({ref:t},b),{},{components:n})):r.a.createElement(d,o({ref:t},b))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var b=2;b<i;b++)l[b]=n[b];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);